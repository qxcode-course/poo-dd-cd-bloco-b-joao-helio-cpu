{
    "patches": [
        {
            "label": "2025-10-25_09-39-09",
            "content": "@@ -3,17 +3,14 @@\n ass \n-Lapiseira\n+Pencil\n :%0A  \n@@ -34,103 +34,141 @@\n lf, \n-thickness: float):%0A        self.thickness = thickness%0A        self.__tip: Grafite %7C None = None\n+espessura: int, dureza: str, tip: None):%0A        self.__espessura = espessura%0A        self.__dureza = dureza%0A        self.__tip = tip\n %0A%0A  \n@@ -294,24 +294,18 @@\n lf, \n-grafite: Grafite\n+valor: str\n ):%0A \n@@ -323,132 +323,89 @@\n elf.\n-hasGrafite():%0A            print(%22fail: ja existe grafite%22)%0A            return%0A        if grafite.thickness != self.thickness\n+__tip is not None:%0A            self.__tip = valor%0A            return%0A        else\n :%0A  \n@@ -431,49 +431,88 @@\n il: \n-calibre incompat%C3%ADvel\n+ja existe grafite\n %22)%0A\n+%0A\n     \n-        return\n+def __str__(self):%0A        return f%22lead: %7Bself.__tip%7D%22\n %0A%0A  \n@@ -547,29 +547,26 @@\n  if \n-not \n self.\n-hasGrafite()\n+__tip is None\n :%0A  \n@@ -627,21 +627,16 @@\n   return\n- None\n %0A       \n@@ -636,31 +636,19 @@\n         \n-grafiteRemovido\n+tip\n  = self.\n@@ -698,87 +698,11 @@\n urn \n-grafiteRemovido%0A%0A    def __str__(self):%0A        return f%22calibre: %7Bself.__\n tip\n-%7D%22\n %0A%0A%0Ac\n@@ -785,462 +785,4 @@\n nho%0A\n-%0A%0Aclass Grafite:%0A    def __init__(self, thickness: float, hardness: str, size: int):%0A        self.thickness = thickness%0A        self.hardness = hardness%0A        self.size = size%0A%0A    def usagePerSheet(self) -%3E int:%0A        tabela = %7B%0A            %22HB%22: 1,%0A            %222B%22: 2,%0A            %224B%22: 4,%0A            %226B%22: 6%0A        %7D%0A        return tabela.get(self.hardness, 1)%0A%0A    def __str__(self):%0A        return f%22%7Bself.thickness%7D:%7Bself.hardness%7D:%7Bself.size%7D%22%0A\n",
            "lines": "33"
        },
        {
            "label": "2025-10-25_10-09-51",
            "content": "@@ -718,717 +718,49 @@\n def \n-writePage(self):%0A        if not self.hasGrafite():%0A            print(%22fail: nao existe grafite%22)%0A            return%0A        grafite = self.__tip%0A%0A        if grafite.size %3C= 10:%0A            print(%22fail: tamanho insuficiente%22)%0A            return%0A%0A        gasto = grafite.usagePerSheet%0A        tamanhoFinal = grafite.size - gasto%0A%0A        if tamanhoFinal %3C 10:%0A            grafite.size = 10%0A            print(%22fail: folha incompleta%22)%0A        else:%0A            grafite.size = tamanhoFinal%0A            print(%22ok: folha escrita%22)%0A%0A    def __str__(self):%0A        if self.__tip is None:%0A            return f%22calibre %7Bself.thickness%7D, grafite %5B%5D%22%0A        else:%0A            return f%22calibre %7Bself.thickness%7D, grafite %5B\n+__str__(self):%0A        return f%22calibre: \n %7Bsel\n@@ -771,9 +771,8 @@\n tip%7D\n-%5D\n %22%0A%0A%0A\n",
            "lines": "52"
        },
        {
            "label": "2025-10-25_10-19-10",
            "content": "@@ -1440,16 +1440,99 @@\n ip%7D%5D%22%0A%0A%0A\n+class Lead:%0A    def __init__(self, tamanho: int):%0A        self.tamanho = tamanho%0A%0A%0A\n class Gr\n@@ -1983,261 +1983,4 @@\n e%7D%22%0A\n-%0A%0Adef main():%0A    lapiseira = None%0A%0A    while True:%0A        line = input() .strip()%0A        if line == %22end%22:%0A            break%0A%0A        args = line.split%0A        cmd = args%5B0%5D%0A%0A        if cmd == %22iniciar%22:%0A            lapiseira = Lapiseira(float(args%5B1%5D))%0A\n",
            "lines": "75"
        },
        {
            "label": "2025-10-25_10-23-17",
            "content": "@@ -2096,17 +2096,20 @@\n  == %22ini\n-t\n+ciar\n %22:%0A     \n",
            "lines": "85"
        },
        {
            "label": "2025-10-25_10-23-31",
            "content": "@@ -2154,13 +2154,4 @@\n %5D))%0A\n-%0A%0Amain()%0A\n",
            "lines": "85"
        },
        {
            "label": "2025-10-25_10-23-44",
            "content": "@@ -2155,145 +2155,8 @@\n ))%0A%0A\n-        elif cmd == %22show%22:%0A            grafite = Grafite(float(args%5B1%5D), args%5B2%5D, int(args%5B3%5D))%0A            lapiseira.inserir(grafite)%0A%0A\n %0Amai\n",
            "lines": "88"
        },
        {
            "label": "2025-10-25_10-24-56",
            "content": "@@ -2176,14 +2176,12 @@\n == %22\n-insert\n+show\n %22:%0A \n@@ -2292,72 +2292,8 @@\n e)%0A%0A\n-        elif cmd == %22remover%22:%0A            lapiseira.remover()%0A%0A\n %0Amai\n",
            "lines": "92"
        },
        {
            "label": "2025-10-25_10-26-50",
            "content": "@@ -1927,24 +1927,25 @@\n eira = None%0A\n+%0A\n     while Tr\n@@ -1974,64 +1974,18 @@\n ut()\n-%0A        print(f%22$%7Bline%7D%22)%0A        args = line.split\n+ .strip\n ()%0A\n-%0A\n     \n@@ -2033,26 +2033,71 @@\n         \n-if args%5B0%5D\n+args = line.split%0A        cmd = args%5B0%5D%0A%0A        if cmd\n  == %22ini\n@@ -2160,31 +2160,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22insert%22\n@@ -2299,31 +2299,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22remover\n@@ -2358,139 +2358,8 @@\n ()%0A%0A\n-        elif args%5B0%5D == %22write%22:%0A            lapiseira.writePage()%0A%0A        elif args%5B0%5D == %22$show%22:%0A            print(lapiseira)%0A%0A\n %0Amai\n",
            "lines": "95"
        },
        {
            "label": "2025-10-25_10-31-13",
            "content": "@@ -1935,27 +1935,8 @@\n one%0A\n-    grafite = None%0A\n     \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-35-45",
            "content": "@@ -268,17 +268,15 @@\n te: \n-%22\n Grafite\n-%22\n ):%0A \n@@ -1927,24 +1927,43 @@\n eira = None%0A\n+    grafite = None%0A\n     while Tr\n",
            "lines": "101"
        },
        {
            "label": "2025-10-25_10-40-50",
            "content": "@@ -2457,16 +2457,17 @@\n %5B0%5D == %22\n+$\n show%22:%0A \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-41-15",
            "content": "@@ -1316,33 +1316,32 @@\n return f%22calibre\n-:\n  %7Bself.thickness\n@@ -1397,17 +1397,16 @@\n %22calibre\n-:\n  %7Bself.t\n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-43-02",
            "content": "@@ -1351,17 +1351,16 @@\n  grafite\n-:\n  %5B%5D%22%0A   \n@@ -1425,17 +1425,16 @@\n  grafite\n-:\n  %5B%7Bself.\n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-43-15",
            "content": "@@ -1354,28 +1354,16 @@\n afite: %5B\n-%7Bself.__tip%7D\n %5D%22%0A     \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-43-39",
            "content": "@@ -459,17 +459,17 @@\n incompat\n-i\n+%C3%AD\n vel%22)%0A  \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-45-36",
            "content": "@@ -1357,12 +1357,22 @@\n te: \n-null\n+%5B%7Bself.__tip%7D%5D\n %22%0A  \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-47-33",
            "content": "@@ -1281,16 +1281,18 @@\n if self.\n+__\n tip is N\n@@ -1316,32 +1316,33 @@\n return f%22calibre\n+:\n  %7Bself.thickness\n@@ -1401,16 +1401,17 @@\n %22calibre\n+:\n  %7Bself.t\n@@ -1434,18 +1434,22 @@\n te: \n+%5B\n %7Bself.\n+__\n tip%7D\n+%5D\n %22%0A%0A%0A\n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-49-49",
            "content": "@@ -1273,34 +1273,32 @@\n         if self.\n-__\n tip is None:%0A   \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-51-07",
            "content": "@@ -1316,33 +1316,32 @@\n return f%22calibre\n-:\n  %7Bself.thickness\n@@ -1400,17 +1400,16 @@\n %22calibre\n-:\n  %7Bself.t\n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-51-24",
            "content": "@@ -1357,18 +1357,12 @@\n te: \n-%7Bself.tip%7D\n+null\n %22%0A  \n@@ -1430,20 +1430,26 @@\n rafite: \n-null\n+%7Bself.tip%7D\n %22%0A%0A%0Aclas\n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-52-00",
            "content": "@@ -1359,18 +1359,16 @@\n : %7Bself.\n-__\n tip%7D%22%0A  \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-52-14",
            "content": "@@ -1353,20 +1353,28 @@\n rafite: \n-null\n+%7Bself.__tip%7D\n %22%0A      \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-52-47",
            "content": "@@ -1316,32 +1316,33 @@\n return f%22calibre\n+:\n  %7Bself.thickness\n@@ -1401,16 +1401,17 @@\n %22calibre\n+:\n  %7Bself.t\n@@ -1434,20 +1434,12 @@\n te: \n-%7Bself.__tip%7D\n+null\n %22%0A%0A%0A\n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-55-26",
            "content": "@@ -1316,33 +1316,32 @@\n return f%22calibre\n-:\n  %7Bself.thickness\n@@ -1400,17 +1400,16 @@\n %22calibre\n-:\n  %7Bself.t\n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-55-44",
            "content": "@@ -2331,16 +2331,17 @@\n  %22remove\n+r\n %22:%0A     \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_10-56-49",
            "content": "@@ -97,32 +97,48 @@\n       self.__tip\n+: Grafite %7C None\n  = None%0A%0A    def\n@@ -158,16 +158,8 @@\n elf)\n- -%3E bool\n :%0A  \n@@ -168,34 +168,74 @@\n     \n-return\n+if\n  self.\n+__\n tip is \n-not Non\n+None:%0A            return False%0A        return Tru\n e%0A%0A \n@@ -488,37 +488,8 @@\n turn\n-%0A        self.__tip = grafite\n %0A%0A  \n",
            "lines": "100"
        },
        {
            "label": "2025-10-25_11-00-19",
            "content": "@@ -92,32 +92,34 @@\n ss%0A        self.\n+__\n tip = None%0A%0A    \n@@ -109,24 +109,24 @@\n _tip = None%0A\n-\n %0A    def has\n@@ -446,24 +446,26 @@\n        self.\n+__\n tip = grafit\n@@ -617,32 +617,34 @@\n Removido = self.\n+__\n tip%0A        self\n@@ -640,24 +640,26 @@\n        self.\n+__\n tip = None%0A \n@@ -836,20 +836,23 @@\n  = self.\n+__\n tip%0A\n+%0A\n         \n@@ -1258,24 +1258,26 @@\n     if self.\n+__\n tip is None:\n@@ -1346,32 +1346,32 @@\n %22%0A        else:%0A\n-\n             retu\n@@ -1417,16 +1417,18 @@\n : %7Bself.\n+__\n tip%7D%22%0A%0A%0A\n",
            "lines": "99"
        },
        {
            "label": "2025-10-25_11-08-08",
            "content": "@@ -1398,17 +1398,16 @@\n rafite: \n-%5B\n %7Bself.ti\n@@ -1408,17 +1408,16 @@\n elf.tip%7D\n-%5D\n %22%0A%0A%0Aclas\n",
            "lines": "98"
        },
        {
            "label": "2025-10-25_11-08-36",
            "content": "@@ -1004,18 +1004,16 @@\n ite.size\n- =\n  - gasto\n",
            "lines": "98"
        },
        {
            "label": "2025-10-25_11-09-13",
            "content": "@@ -1004,18 +1004,16 @@\n ite.size\n-()\n  = - gas\n",
            "lines": "98"
        },
        {
            "label": "2025-10-25_11-10-08",
            "content": "@@ -1004,16 +1004,18 @@\n ite.size\n+()\n  = - gas\n",
            "lines": "98"
        },
        {
            "label": "2025-10-25_11-10-24",
            "content": "@@ -968,18 +968,16 @@\n PerSheet\n-()\n %0A       \n@@ -1004,16 +1004,18 @@\n ite.size\n+ =\n  - gasto\n",
            "lines": "98"
        },
        {
            "label": "2025-10-25_11-11-40",
            "content": "@@ -1182,30 +1182,50 @@\n             \n-return\n+print(%22ok: folha escrita%22)\n %0A%0A    def __\n",
            "lines": "98"
        },
        {
            "label": "2025-10-25_11-13-44",
            "content": "class Lapiseira:\n    def __init__(self, thickness: float):\n        self.thickness = thickness\n        self.tip = None\n\n    def hasGrafite(self) -> bool:\n        return self.tip is not None\n\n    def inserir(self, grafite: \"Grafite\"):\n        if self.hasGrafite():\n            print(\"fail: ja existe grafite\")\n            return\n        if grafite.thickness != self.thickness:\n            print(\"fail: calibre incompativel\")\n            return\n        self.tip = grafite\n\n    def remover(self):\n        if not self.hasGrafite():\n            print(\"fail: nao existe grafite\")\n            return None\n        grafiteRemovido = self.tip\n        self.tip = None\n        return grafiteRemovido\n\n    def writePage(self):\n        if not self.hasGrafite():\n            print(\"fail: nao existe grafite\")\n            return\n        grafite = self.tip\n        if grafite.size <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return\n\n        gasto = grafite.usagePerSheet()\n        tamanhoFinal = grafite.size - gasto\n\n        if tamanhoFinal < 10:\n            grafite.size = 10\n            print(\"fail: folha incompleta\")\n        else:\n            grafite.size = tamanhoFinal\n            return\n\n    def __str__(self):\n        if self.tip is None:\n            return f\"calibre: {self.thickness}, grafite: null\"\n        else:\n            return f\"calibre: {self.thickness}, grafite: [{self.tip}]\"\n\n\nclass Grafite:\n    def __init__(self, thickness: float, hardness: str, size: int):\n        self.thickness = thickness\n        self.hardness = hardness\n        self.size = size\n\n    def usagePerSheet(self) -> int:\n        tabela = {\n            \"HB\": 1,\n            \"2B\": 2,\n            \"4B\": 4,\n            \"6B\": 6\n        }\n        return tabela.get(self.hardness, 1)\n\n    def __str__(self):\n        return f\"{self.thickness}:{self.hardness}:{self.size}\"\n\n\ndef main():\n    lapiseira = None\n    while True:\n        line = input()\n        print(f\"${line}\")\n        args = line.split()\n\n        if line == \"end\":\n            break\n\n        if args[0] == \"init\":\n            lapiseira = Lapiseira(float(args[1]))\n\n        elif args[0] == \"insert\":\n            grafite = Grafite(float(args[1]), args[2], int(args[3]))\n            lapiseira.inserir(grafite)\n\n        elif args[0] == \"remove\":\n            lapiseira.remover()\n\n        elif args[0] == \"write\":\n            lapiseira.writePage()\n\n        elif args[0] == \"show\":\n            print(lapiseira)\n\n\nmain()\n",
            "lines": "98"
        }
    ]
}